# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  repository_dispatch:
    type: [ deploy ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      deploy_env: ${{ steps.passed.outputs.deploy_env }}
    steps:
      - name: Trigger
        id: trigger
        run: |
          echo "event_name: '${{ github.event_name }}'"
          echo "Received request from '${{ github.event.client_payload.repository }}'"
          echo "Test environment: '${{ github.event.client_payload.environment }}'"
          echo "Result: '${{ github.event.client_payload.result }}'"
    
      - name: Passed
        id: passed
        if: (github.event_name == 'repository_dispatch') && (github.event.client_payload.result == 'pass')
        run: |
          echo "Previous environment '${{ github.event.client_payload.environment }}' deployment E2E tests passed"

          if [ ${{ github.event.client_payload.environment }} == 'development' ]; then
            DEPLOYMENT_ENV='partner'
          elif [ ${{ github.event.client_payload.environment }} == 'partner' ]; then
            DEPLOYMENT_ENV='stage'
          elif [ ${{ github.event.client_payload.environment }} == 'stage' ]; then
            DEPLOYMENT_ENV='production'
          else
            echo "Environment: '${{ github.event.client_payload.environment }}' is invalid"
            exit 1
          fi

          echo "::set-output name=deploy_env::${DEPLOYMENT_ENV}"
      
      - name: Failed
        if: (github.event_name == 'repository_dispatch') && (github.event.client_payload.result != 'pass')
        run: |
          echo "Failed!"
          exit 1

  call_repo_dispatch:
    needs: [ deploy ]
    uses: joshxjin/experiments/.github/workflows/trigger-repo-dispatch.yml@main
    with:
      environment: ${{ needs.deploy_to_environment.outputs.deploy_env }}
      continue_deployment: ${{ needs.deploy.outputs.deploy_env }} != 'production'
    secrets:
      PAT: ${{ secrets.PAT }}
